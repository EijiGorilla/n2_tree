"use strict";(self.webpackChunkn2_tree=self.webpackChunkn2_tree||[]).push([[9358,68649],{9358:(e,r,t)=>{t.r(r),t.d(r,{default:()=>o});var a=t(35143),i=t(50076),s=t(46053),l=(t(81806),t(76460),t(47249),t(85842)),n=t(2190),p=t(68649);let d=class extends((0,p.default)(n.A)){constructor(){super(...arguments),this.type="ogc-feature-3d"}initialize(){this.layer.serviceSupportsSpatialReference(this.view.spatialReference)||this.addResolvingPromise(Promise.reject(new i.default("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:this.layer})))}};(0,a._)([(0,s.MZ)()],d.prototype,"layer",void 0),d=(0,a._)([(0,l.$)("esri.views.3d.layers.OGCFeatureLayerView3D")],d);const o=d},68649:(e,r,t)=>{t.r(r),t.d(r,{default:()=>l});var a=t(35143),i=t(46053),s=(t(81806),t(76460),t(47249),t(85842));const l=e=>{let r=class extends e{get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return(0,a._)([(0,i.MZ)()],r.prototype,"layer",void 0),(0,a._)([(0,i.MZ)({readOnly:!0})],r.prototype,"availableFields",null),r=(0,a._)([(0,s.$)("esri.views.layers.OGCFeatureLayerView")],r),r}}}]);
//# sourceMappingURL=9358.8ec24b4d.chunk.js.map