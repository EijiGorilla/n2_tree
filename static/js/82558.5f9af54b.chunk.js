"use strict";(self.webpackChunkn2_tree=self.webpackChunkn2_tree||[]).push([[82558,91196],{53596:(e,t,r)=>{r.d(t,{DS:()=>l,J7:()=>n,w$:()=>i});const n="updating";function i(e){return"updating"===e?null:e}function l(e){return"updating"===e}},82558:(e,t,r)=>{r.r(t),r.d(t,{default:()=>g});var n=r(35143),i=r(18690),l=r(76460),o=r(30726),a=r(53596),s=r(50346),u=r(68134),d=r(46053),p=(r(81806),r(85842)),y=r(9624),c=r(91196);let h=class extends c.default{constructor(){super(...arguments),this.layer=null,this.filter=null,this._geometryEngine=null,this._projectionEngineLoaded=!1,this._abortController=new AbortController}get availableFields(){return[]}get maximumNumberOfFeatures(){return 0}set maximumNumberOfFeatures(e){throw new Error("Not implemented")}get maximumNumberOfFeaturesExceeded(){return!1}get layerFilter(){return(0,a.w$)(this._layerFilter)}get _layerFilter(){const e=this.layer?.filter;if(null==e||e.geometries.length<1)return null;const t=this._geometryEngine;if(null==t||!this._projectionEngineLoaded&&this._filterNeedsProjectionEngine)return a.J7;const r=e.geometries.at(0).spatialReference,n=e.geometries.toArray().map((e=>{try{e=t.simplify(e)}catch(n){return l.A.getLogger(this).warnOncePerTick("Failed to simplify scene filter mask polygon. Polygon will be ignored."),null}if(null==e)return null;if(e.spatialReference.equals(r))return e;try{return(0,y.project)(e,r)}catch(n){return l.A.getLogger(this).warnOncePerTick("Failed to project scene filter mask polygon. Polygon will be ignored."),null}})).filter(i.Ru).sort(((e,t)=>e.extent.xmin-t.extent.xmin)),o=new Set,s=new Array,u=new Array;for(let i of n){const e=i.extent.xmin;if(s.length=0,o.forEach((r=>{if(e>=r.extent.xmax)return u.push(r),void o.delete(r);i.extent.ymin<=r.extent.ymax&&i.extent.ymax>=r.extent.ymin&&t.intersects(i,r)&&s.push(r)})),s.length>0){s.push(i);try{i=t.union(s)}catch(d){l.A.getLogger(this).warnOncePerTick("Failed to unify filter mask polygons. Polygon will be ignored.");continue}s.pop(),s.forEach((e=>o.delete(e)))}o.add(i)}return o.forEach((e=>u.push(e))),u.length>0?{spatialRelationship:e.spatialRelationship,geometries:u}:null}get _filterNeedsProjectionEngine(){const e=this.layer.filter;if(null==e||e.geometries.length<=1)return!1;const t=e.geometries.at(0).spatialReference;return e.geometries.some((e=>{let{spatialReference:r}=e;return!r.equals(t)&&!(0,y.canProjectWithoutEngine)(r,t)}))}get layerFilterUpdating(){return(0,a.DS)(this._layerFilter)}initialize(){const{signal:e}=this._abortController;(0,u.whenOnce)((()=>this.destroyed||!this._geometryEngine&&this.layer?.filter?.geometries?.length),e).then((async()=>{(0,s.throwIfAbortError)(e),this._geometryEngine=await Promise.all([r.e(52612),r.e(97265)]).then(r.bind(r,63391))})).catch(s.throwIfNotAbortError),this._projectionEngineLoaded=(0,y.isLoaded)(),(0,u.whenOnce)((()=>this.destroyed||!this._projectionEngineLoaded&&this._filterNeedsProjectionEngine),e).then((async()=>{(0,s.throwIfAbortError)(e),await(0,y.load)(),this._projectionEngineLoaded=!0})).catch(s.throwIfNotAbortError)}destroy(){this._abortController=(0,o.DC)(this._abortController)}highlight(e){throw new Error("Not implemented")}queryFeatures(e,t){throw new Error("Not implemented")}queryObjectIds(e,t){throw new Error("Not implemented")}queryFeatureCount(e,t){throw new Error("Not implemented")}createQuery(){throw new Error("Not implemented")}queryExtent(e,t){throw new Error("Not implemented")}};(0,n._)([(0,d.MZ)()],h.prototype,"layer",void 0),(0,n._)([(0,d.MZ)()],h.prototype,"availableFields",null),(0,n._)([(0,d.MZ)()],h.prototype,"maximumNumberOfFeatures",null),(0,n._)([(0,d.MZ)({readOnly:!0})],h.prototype,"maximumNumberOfFeaturesExceeded",null),(0,n._)([(0,d.MZ)()],h.prototype,"filter",void 0),(0,n._)([(0,d.MZ)({readOnly:!0})],h.prototype,"layerFilter",null),(0,n._)([(0,d.MZ)({readOnly:!0})],h.prototype,"_layerFilter",null),(0,n._)([(0,d.MZ)()],h.prototype,"_geometryEngine",void 0),(0,n._)([(0,d.MZ)()],h.prototype,"_projectionEngineLoaded",void 0),(0,n._)([(0,d.MZ)()],h.prototype,"_filterNeedsProjectionEngine",null),(0,n._)([(0,d.MZ)()],h.prototype,"layerFilterUpdating",null),h=(0,n._)([(0,p.$)("esri.views.layers.SceneLayerView")],h);const g=h},90992:(e,t,r)=>{r.d(t,{E5:()=>a,JU:()=>o,Of:()=>i,Uk:()=>l,WK:()=>s,g7:()=>u,lO:()=>d,lQ:()=>p});var n=r(50076);function i(e){return e&&"function"==typeof e.highlight}function l(e){return e&&"function"==typeof e.maskOccludee}function o(e,t,r){return null==e||e>=r&&(0===t||e<=t)}function a(e,t){if(t&&e){const{minScale:r,maxScale:n}=e;if(s(r,n))return o(t,r,n)}return!0}function s(e,t){return null!=e&&e>0||null!=t&&t>0}function u(e){return!e?.minScale||!e.maxScale||e.minScale>=e.maxScale}function d(e){return null!=e&&"object"==typeof e&&"createQuery"in e&&"queryFeatures"in e&&"layer"in e&&"view"in e}function p(e,t,r){return new n.default("layerview:spatial-reference-incompatible",`The spatial reference of this ${e}${t?`(wkid:${t})`:""} is incompatible with the spatial reference of the view${r?`(wkid:${r})`:""}.`,{})}},91196:(e,t,r)=>{r.r(t),r.d(t,{default:()=>g});var n=r(35143),i=r(91967),l=r(54099),o=r(5632),a=r(76460),s=r(30726),u=r(91291),d=r(46053),p=(r(81806),r(47249),r(85842)),y=r(19451),c=r(90992);let h=class extends(o.A.IdentifiableMixin(u.A.EsriPromiseMixin(l.A.EventedMixin(i.default)))){get spatialReferenceSupported(){return!0}constructor(e){super(e),this._updatingHandles=new y.U,this.layer=null,this.parent=null}initialize(){this.when().catch((e=>{if("layerview:create-error"!==e.name){const t=this.layer&&this.layer.id||"no id",r=this.layer?.title||"no title";a.A.getLogger(this).error("#resolve()",`Failed to resolve layer view (layer title: '${r}', id: '${t}')`,e)}}))}destroy(){this._updatingHandles=(0,s.pR)(this._updatingHandles)}get fullOpacity(){return(this.layer?.opacity??1)*(this.parent?.fullOpacity??1)}get suspended(){return this.destroyed||!this.canResume()}get suspendInfo(){return this.getSuspendInfo()}get legendEnabled(){return!this.suspended&&!0===this.layer?.legendEnabled}get updating(){return!(!this._updatingHandles?.updating&&!this.isUpdating())}get updatingProgress(){return this.updating?0:1}get updateSuspended(){return this.suspended}get visible(){return!0===this.layer?.visible}set visible(e){this._overrideIfSome("visible",e)}get visibleAtCurrentScale(){return!0}get visibleAtCurrentTimeExtent(){const e=this.view.timeExtent,t=this.layer?.visibilityTimeExtent;return!e||!t||!e.intersection(t).isEmpty}canResume(){const e=this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null;return this.visible&&this.layer?.loaded&&this.parent&&!this.parent.suspended&&this.view?.ready&&(0,c.g7)(e)&&this.visibleAtCurrentScale&&this.visibleAtCurrentTimeExtent||!1}getSuspendInfo(){const e=this.parent?.suspended?this.parent.suspendInfo:{};this.view?.ready||(e.viewNotReady=!0),this.layer&&this.layer.loaded||(e.layerNotLoaded=!0);const t=this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null;return(0,c.g7)(t)&&this.visibleAtCurrentScale||(e.outsideScaleRange=!0),this.visibleAtCurrentTimeExtent||(e.outsideVisibilityTimeExtent=!0),this.visible||(e.layerInvisible=!0),e}isUpdating(){return!1}};(0,n._)([(0,d.MZ)({readOnly:!0})],h.prototype,"spatialReferenceSupported",null),(0,n._)([(0,d.MZ)()],h.prototype,"view",void 0),(0,n._)([(0,d.MZ)()],h.prototype,"fullOpacity",null),(0,n._)([(0,d.MZ)()],h.prototype,"layer",void 0),(0,n._)([(0,d.MZ)()],h.prototype,"parent",void 0),(0,n._)([(0,d.MZ)({readOnly:!0})],h.prototype,"suspended",null),(0,n._)([(0,d.MZ)({readOnly:!0})],h.prototype,"suspendInfo",null),(0,n._)([(0,d.MZ)({readOnly:!0})],h.prototype,"legendEnabled",null),(0,n._)([(0,d.MZ)({type:Boolean,readOnly:!0})],h.prototype,"updating",null),(0,n._)([(0,d.MZ)({readOnly:!0})],h.prototype,"updatingProgress",null),(0,n._)([(0,d.MZ)()],h.prototype,"updateSuspended",null),(0,n._)([(0,d.MZ)()],h.prototype,"visible",null),(0,n._)([(0,d.MZ)({readOnly:!0})],h.prototype,"visibleAtCurrentScale",null),(0,n._)([(0,d.MZ)({readOnly:!0})],h.prototype,"visibleAtCurrentTimeExtent",null),h=(0,n._)([(0,p.$)("esri.views.layers.LayerView")],h);const g=h}}]);
//# sourceMappingURL=82558.5f9af54b.chunk.js.map