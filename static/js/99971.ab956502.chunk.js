"use strict";(self.webpackChunkn2_tree=self.webpackChunkn2_tree||[]).push([[29310,99971],{29310:(e,t,r)=>{r.r(t),r.d(t,{createRasterLayerAdapter:()=>I,getDefaultBandCombination:()=>M,getSupportedRendererInfo:()=>x,processRasterRendererParameters:()=>F});var a=r(50076),s=r(78937),n=r(35143),i=r(46053),o=(r(81806),r(76460),r(47249),r(85842)),l=r(19247),c=r(86866),u=r(46570),d=r(49304),p=r(53521);let m=class extends d.A{constructor(){super(...arguments),this.type="raster-layer-adapter",this._statsCache=new p.q(20)}get serviceRasterInfo(){return this.rasterInfo}async updateRasterInfo(e){this.rasterInfo=await this.generateRasterInfo(e),this.rasterFunction=e?.rasterFunction}async updateRasterInfoWithEstimatedStats(e,t){const r=await this.estimateStatisticsHistograms(t);r?.statistics&&(e.statistics=r.statistics),r?.histograms&&(e.histograms=r.histograms)}};(0,n._)([(0,i.MZ)()],m.prototype,"layer",void 0),(0,n._)([(0,i.MZ)()],m.prototype,"serviceRasterInfo",null),(0,n._)([(0,i.MZ)()],m.prototype,"rasterInfo",void 0),(0,n._)([(0,i.MZ)()],m.prototype,"rasterFunction",void 0),(0,n._)([(0,i.MZ)({readOnly:!0})],m.prototype,"type",void 0),(0,n._)([(0,i.MZ)()],m.prototype,"version",void 0),m=(0,n._)([(0,o.$)("esri.smartMapping.raster.support.adapters.RasterLayerAdapter")],m);const h=m;let f=class extends h{generateRasterInfo(e){const t=e?.rasterFunction;try{return this.layer.generateRasterInfo(t,{signal:e?.signal})}catch{return Promise.resolve(this.layer.serviceRasterInfo)}}async estimateStatisticsHistograms(e){const{layer:t}=this,r=t.mosaicRule?.multidimensionalDefinition?.[0]?.variableName??"",a=`${e?.rasterFunction?.functionName??"default"}${r}`,s=this._statsCache.get(a);if(s)return s;let{width:n,height:i,pixelSize:o}=t.rasterInfo,d=1;for(;n>2e3||i>2e3;)n/=2,i/=2,d*=2;const p=e?.rasterFunction??t.rasterFunction,{fullExtent:m,mosaicRule:h}=t;o=new l.default(o.x*d,o.y*d,m.spatialReference);const f=new u.default({geometry:m,pixelSize:o,renderingRule:p,mosaicRule:h});let y;if(t.capabilities.operations.supportsComputeStatisticsHistograms)y=await t.computeStatisticsHistograms(f,e);else{const{histograms:r}=await t.computeHistograms(f,e);y={statistics:(0,c.Pg)(r),histograms:r}}return y&&this._statsCache.put(a,y),y}supportsMultidirectionalHillshade(){return this.layer.version>=10.81}load(e){return this.addResolvingPromise(this.layer.load(e).then((()=>{this.generateRasterInfo({rasterFunction:this.rasterFunction,signal:e?.signal}).then((e=>this.rasterInfo=e))}))),Promise.resolve(this)}};(0,n._)([(0,i.MZ)()],f.prototype,"layer",void 0),f=(0,n._)([(0,o.$)("esri.smartMapping.raster.support.adapters.ImageryLayerAdapter")],f);const y=f;var g=r(76797);let v=class extends h{async generateRasterInfo(e){const{layer:t}=this,r=e?.rasterFunction;if("imagery-tile"===t.type&&r)try{return await t.generateRasterInfo(r,{signal:e?.signal})}catch{return t.serviceRasterInfo}return this.rasterInfo}async estimateStatisticsHistograms(e){const{layer:t}=this,r=t.multidimensionalDefinition?.[0]?.variableName??"",s=`${t.rasterFunction?.functionName??"default"}${r}`,n=this._statsCache.get(s);if(n)return n;const{raster:i}=t,{extent:o,width:l,height:u}=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;const{pyramidScalingFactor:r,maximumPyramidLevel:a}=e.storageInfo;let{extent:s,width:n,height:i,pixelSize:o}=e,l=Math.max(0,Math.ceil(Math.log(Math.max(n,i)/t)/Math.log(r))-1),c=0,u=0;if(l<=a){const e=r**l;n=Math.floor(n/e),i=Math.floor(i/e)}else l=0,n=Math.min(n,t),i=Math.min(i,t),c=Math.max(Math.floor(n/2-500),0),u=Math.max(Math.floor(i/2-500),0),s=new g.default({xmin:s.xmin+c*o.x,xmax:Math.min(s.xmax,s.xmin+c*o.x*t),ymin:s.ymin+u*o.y,ymax:Math.min(s.ymax,s.ymin+u*o.y*t)});return{extent:s,width:n,height:i,origin:{x:c,y:u}}}(i.rasterInfo),{pixelBlock:d}=await t.fetchPixels(o,l,u,e);if(null==d)throw new a.default("raster-layer-adapter","Unable to estimate histograms");const p=(0,c.f4)(d);return p&&this._statsCache.put(s,p),p}supportsMultidirectionalHillshade(){return!0}load(e){return this.addResolvingPromise(this.layer.load(e).then((()=>this.rasterInfo=this.layer.raster.rasterInfo))),Promise.resolve(this)}};(0,n._)([(0,i.MZ)()],v.prototype,"layer",void 0),v=(0,n._)([(0,o.$)("esri.smartMapping.raster.support.adapters.ImageryTileLayerAdapter")],v);const w={imagery:{adapter:y,label:"ImageryLayer"},"imagery-tile":{adapter:v,label:"ImageryTileLayer"},wcs:{adapter:v,label:"WCSLayer"}},R={"raster-stretch":"raster-stretch","unique-value":"raster-unique-value","raster-rgb":"raster-rgb","class-breaks":"raster-class-breaks","raster-colormap":"raster-colormap","raster-shaded-relief":"raster-shaded-relief","vector-field":"raster-vector-field",flow:"raster-flow"},b=Object.keys(w).map((e=>w[e].label));function I(e){if("raster-layer-adapter"===e.type)return e;const t=w[e.type]?.adapter;return null==t?null:new t({layer:e})}async function x(e){const t=I((e=await F(e)).layer),r=await t.generateRasterInfo(e),a=(0,s.fp)(r,!0).map((e=>R[e])),n=t.layer,i="imagery-tile"===n.type?(0,s.Mm)(n.raster):void 0,o="wcs"!==n.type?n.presetRenderers:void 0,l=(0,s.I8)({variableName:e.variableName,rasterFunctionName:e.rasterFunction?.functionName,presetRenderers:o}),c=l?.renderer??(0,s.PD)(r,{rasterFunctionColorRamp:i,variableName:e.variableName}),{bandCount:u}=r;return u>1&&a.push("raster-rgb"),!a.includes("raster-class-breaks")&&1===u&&+t.layer?.version>=10.3&&a.push("raster-class-breaks"),{supportedTypes:a,defaultRenderer:c}}async function M(e){const t=I((e=await F(e)).layer),r=await t.generateRasterInfo(e),{layer:a}=t;if("wcs"!==a.type&&a.presetRenderers?.length){const t=(0,s.I8)({variableName:e.variableName,rasterFunctionName:e.rasterFunction?.functionName,presetRenderers:a.presetRenderers});if(t?.bandIds?.length)return t.bandIds}return(0,s.ci)(r)}async function F(e){const{layer:t}=e;if(!t)throw new a.default("raster-renderer-creator:missing-parameters","'layer' parameter is required");const r=I(t);if(null==r)throw new a.default("raster-renderer-creator:invalid-parameters","'layer' must be one of these types: "+b.join(", "));await r.load();const s=e.rasterFunction??e.renderingRule??t.rasterFunction;return await r.updateRasterInfo({rasterFunction:s,signal:e.signal}),{...e,layer:r,rasterFunction:s}}},99971:(e,t,r)=>{r.r(t),r.d(t,{createRenderer:()=>o});var a=r(50076),s=r(70816),n=r(78937),i=r(29310);async function o(e){e=await async function(e){e=await(0,i.processRasterRendererParameters)(e);const{serviceRasterInfo:t}=e.layer;if(t.bandCount>1)throw new a.default("raster-class-breaks-renderer:not-supported","Multiband raster is not supported");const{attributeTable:r}=t;if(null==r){if((0,s.bo)(t))return e.classFieldName=e.classFieldName||"value",e;throw new a.default("raster-unique-value-renderer:not-supported","The source raster does not have an attribute table")}const o=e.classFieldName?.toLowerCase();if(o&&!r.fields.some((e=>e.name.toLowerCase()===o)))throw new a.default("raster-unique-value-renderer:invalid-parameters","A valid 'classfieldName' is required");return o||(e.classFieldName=(0,n.tj)(r)?.name),e}(e);const{classFieldName:t,colors:r,colorRamp:o}=e,l=(0,n.zd)(e.layer.serviceRasterInfo,t,r,o);if(null==l)throw new a.default("raster-unique-value-renderer:not-supported","UniqueValueRenderer is not supported on the provided data source");return{renderer:l,classFieldName:t}}}}]);
//# sourceMappingURL=99971.ab956502.chunk.js.map