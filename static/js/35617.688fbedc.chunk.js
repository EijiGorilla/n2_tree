"use strict";(self.webpackChunkn2_tree=self.webpackChunkn2_tree||[]).push([[35617],{35617:(e,t,n)=>{n.r(t),n.d(t,{hydratedAdapter:()=>c});var a=n(76797),o=n(66388),s=n(19247),r=n(65215),i=n(23701);const c={convertToGEGeometry:function(e,t){if(null==t)return null;let n="cache"in t?t.cache._geVersion:void 0;return null==n&&(n=e.convertJSONToGeometry(t),"cache"in t&&(t.cache._geVersion=n)),n},exportPoint:function(e,t,n){const a=e.hasZ(t),o=e.hasM(t),r=new s.default({x:e.getPointX(t),y:e.getPointY(t),spatialReference:n});return a&&(r.z=e.getPointZ(t)),o&&(r.m=e.getPointM(t)),r.cache._geVersion=t,r},exportPolygon:function(e,t,n){const a=new r.default({rings:e.exportPaths(t),hasZ:e.hasZ(t),hasM:e.hasM(t),spatialReference:n});return a.cache._geVersion=t,a},exportPolyline:function(e,t,n){const a=new i.default({paths:e.exportPaths(t),hasZ:e.hasZ(t),hasM:e.hasM(t),spatialReference:n});return a.cache._geVersion=t,a},exportMultipoint:function(e,t,n){const a=new o.default({hasZ:e.hasZ(t),hasM:e.hasM(t),points:e.exportPoints(t),spatialReference:n});return a.cache._geVersion=t,a},exportExtent:function(e,t,n){const o=e.hasZ(t),s=e.hasM(t),r=new a.default({xmin:e.getXMin(t),ymin:e.getYMin(t),xmax:e.getXMax(t),ymax:e.getYMax(t),spatialReference:n});if(o){const n=e.getZExtent(t);r.zmin=n.vmin,r.zmax=n.vmax}if(s){const n=e.getMExtent(t);r.mmin=n.vmin,r.mmax=n.vmax}return r.cache._geVersion=t,r}}}}]);
//# sourceMappingURL=35617.688fbedc.chunk.js.map