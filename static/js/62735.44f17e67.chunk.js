"use strict";(self.webpackChunkn2_tree=self.webpackChunkn2_tree||[]).push([[62735],{62735:(t,e,i)=>{i.r(e),i.d(e,{default:()=>f});var o=i(35143),a=i(48053),n=i(19276),r=i(50076),s=i(54099),l=i(46053),c=i(21403),u=(i(81806),i(47249),i(85842)),p=i(994),k=i(59909),w=i(79535);const d=n.default.ofType(k.default),h={width:128,height:128,format:"png"},m={takeScreenshot:!0,captureViewpoint:!0,captureRotation:!0,captureScale:!0,captureTimeExtent:!0},v={time:!0};let b=class extends((0,w.A)(s.A.EventedAccessor)){constructor(t){super(t),this.capabilities={...v},this.activeBookmark=null,this.view=null}destroy(){this.view=null,this._set("activeBookmark",null)}castCapabilities(t){return{...v,...t}}get bookmarks(){return this.view?.map?.bookmarks??new d}set bookmarks(t){this._overrideIfSome("bookmarks",t)}set defaultCreateOptions(t){this._set("defaultCreateOptions",{...m,...t})}get defaultCreateOptions(){return m}set defaultEditOptions(t){this._set("defaultEditOptions",{...m,...t})}get defaultEditOptions(){return m}get state(){const{view:t}=this;return t&&!t.ready?"loading":"ready"}async createBookmark(t){const{view:e,defaultCreateOptions:i,capabilities:o}=this;if(!e)throw new r.default("create-bookmark:invalid-view","Cannot create a bookmark without a view.");const{takeScreenshot:a,screenshotSettings:n,captureViewpoint:s,captureRotation:l,captureScale:c,captureTimeExtent:u}={...i,...t},p=a?await this._createThumbnail(n):void 0,w=o.time&&u&&null!=e.timeExtent?e.timeExtent.clone():void 0;return new k.default({...p&&{thumbnail:p},...u&&{timeExtent:w},...s&&{viewpoint:this._createViewpoint({view:e,captureScale:c,captureRotation:l})}})}async editBookmark(t,e){if(!t)return t;const{view:i,defaultEditOptions:o}=this;if(!i)throw new r.default("edit-bookmark:invalid-view","Cannot edit a bookmark without a view.");const{takeScreenshot:a,screenshotSettings:n,captureViewpoint:s,captureRotation:l,captureScale:c,captureTimeExtent:u}={...o,...e},p=a?await this._createThumbnail(n):void 0;return p&&(t.thumbnail=p),s&&(t.viewpoint=this._createViewpoint({view:i,captureScale:c,captureRotation:l})),u&&null!=i.timeExtent&&(t.timeExtent=i.timeExtent.clone()),this.emit("bookmark-edit",{bookmark:t}),t}goTo(t){const{capabilities:e,view:i}=this;if(!i)throw new r.default("go-to:invalid-view","Cannot go to a bookmark without a view");const o=t?.viewpoint;if(!o)throw new r.default("go-to:invalid-bookmark","Cannot go to a bookmark that does not contain a 'viewpoint'.",{bookmark:t});this._set("activeBookmark",t);const a=this.callGoTo({target:o}),n=t?.timeExtent;return e.time&&n&&(i.timeExtent=n),this.emit("bookmark-select",{bookmark:t}),a.catch((()=>{})).then((()=>this._set("activeBookmark",null))),a}async _createThumbnail(t){const{view:e}=this;if(!e)throw new r.default("bookmark:invalid-view","Cannot create slide thumbnail without a view");const i=await e.takeScreenshot({...h,...t});return new p.o({url:i.dataUrl})}_createViewpoint(t){let{view:e,captureRotation:i,captureScale:o}=t;const n=e.viewpoint?.clone();return new a.default({targetGeometry:e.extent?.clone(),rotation:(i?n?.rotation:null)??0,scale:(o?n?.scale:null)??0})}};(0,o._)([(0,l.MZ)()],b.prototype,"capabilities",void 0),(0,o._)([(0,c.w)("capabilities")],b.prototype,"castCapabilities",null),(0,o._)([(0,l.MZ)({readOnly:!0})],b.prototype,"activeBookmark",void 0),(0,o._)([(0,l.MZ)({type:d})],b.prototype,"bookmarks",null),(0,o._)([(0,l.MZ)()],b.prototype,"defaultCreateOptions",null),(0,o._)([(0,l.MZ)()],b.prototype,"defaultEditOptions",null),(0,o._)([(0,l.MZ)({readOnly:!0})],b.prototype,"state",null),(0,o._)([(0,l.MZ)()],b.prototype,"view",void 0),b=(0,o._)([(0,u.$)("esri.widgets.Bookmarks.BookmarksViewModel")],b);const f=b}}]);
//# sourceMappingURL=62735.44f17e67.chunk.js.map