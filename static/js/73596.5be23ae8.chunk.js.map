{"version":3,"file":"static/js/73596.5be23ae8.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/chunks/global.js","../node_modules/@esri/calcite-components/dist/components/calcite-color-picker-swatch/customElement.js","../node_modules/@esri/calcite-components/dist/chunks/utils4.js","../node_modules/color-string/node_modules/color-name/index.js","../node_modules/color-string/index.js","../node_modules/color/node_modules/color-name/index.js","../node_modules/color/node_modules/color-convert/conversions.js","../node_modules/color/node_modules/color-convert/route.js","../node_modules/color/node_modules/color-convert/index.js","../node_modules/color/index.js"],"sourcesContent":["/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.1.0 */\nconst c = { max: \"320px\" }, a = { max: \"476px\" }, i = { max: \"768px\" }, t = { max: \"1152px\" }, e = \"8px\", n = \"12px\", s = \"16px\", x = \"2px\", o = \"0.25rem\", p = \"0.5rem\";\nexport {\n  a,\n  i as b,\n  c,\n  t as d,\n  o as e,\n  x as f,\n  p as g,\n  s as h,\n  n as i,\n  e as j\n};\n","import { c as S } from \"../../chunks/runtime.js\";\nimport { keyed as k } from \"lit-html/directives/keyed.js\";\nimport z from \"color\";\nimport { html as C, nothing as r, svg as d } from \"lit\";\nimport { LitElement as y, safeClassMap as p } from \"@arcgis/lumina\";\nimport { C as x } from \"../../chunks/dom.js\";\nimport { h as u } from \"../../chunks/utils4.js\";\nimport { css as b } from \"@lit/reactive-element/css-tag.js\";\n/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.1.0 */\nconst h = {\n  swatch: \"swatch\",\n  noColorSwatch: \"swatch--no-color\",\n  checker: \"checker\"\n}, g = {\n  borderLight: \"rgba(0, 0, 0, 0.3)\",\n  borderDark: \"rgba(255, 255, 255, 0.15)\"\n}, $ = 4, i = {\n  squareSize: $,\n  size: $ * 2\n}, v = b`:host{position:relative;display:inline-flex}:host([scale=s]){block-size:1.25rem;inline-size:1.25rem}:host([scale=m]){block-size:1.5rem;inline-size:1.5rem}:host([scale=l]){block-size:2rem;inline-size:2rem}.swatch{overflow:hidden;block-size:inherit;inline-size:inherit}.swatch rect{transition-property:all;transition-duration:.15s;transition-timing-function:cubic-bezier(.4,0,.2,1)}.swatch--no-color rect{fill:var(--calcite-color-foreground-1)}.swatch--no-color line{stroke:var(--calcite-color-status-danger)}.checker{fill:#cacaca}:host([hidden]){display:none}[hidden]{display:none}`;\nclass q extends y {\n  constructor() {\n    super(...arguments), this.active = !1, this.scale = \"m\";\n  }\n  static {\n    this.properties = { active: 7, color: 1, scale: 3 };\n  }\n  static {\n    this.styles = v;\n  }\n  // #endregion\n  // #region Lifecycle\n  load() {\n    this.handleColorChange(this.color);\n  }\n  willUpdate(e) {\n    e.has(\"color\") && this.handleColorChange(this.color);\n  }\n  // #endregion\n  // #region Private Methods\n  handleColorChange(e) {\n    this.internalColor = e ? z(e) : null;\n  }\n  // #endregion\n  // #region Rendering\n  render() {\n    const e = !this.internalColor, c = {\n      [h.swatch]: !0,\n      [h.noColorSwatch]: e\n    };\n    return C`<svg class=${p(c)} xmlns=http://www.w3.org/2000/svg>${this.renderSwatch()}</svg>`;\n  }\n  renderSwatch() {\n    const { active: e, el: c, internalColor: s } = this, o = e ? \"100%\" : \"0\", a = x(c) === \"light\" ? g.borderLight : g.borderDark, l = !s, t = {\n      height: \"100%\",\n      rx: o,\n      stroke: a,\n      strokeWidth: \"2\",\n      width: \"100%\"\n    };\n    if (l)\n      return d`<clipPath id=shape><rect height=100% rx=${o ?? r} width=100% /></clipPath>${this.renderSwatchRect({\n        clipPath: `inset(0 round ${o})`,\n        ...t\n      })}<line clip-path=url(#shape) stroke-width=3 x1=100% x2=0 y1=0 y2=100% />`;\n    const n = s.alpha(), f = u(s), w = u(s, n < 1);\n    return d`<title>${w}</title><defs><pattern height=${i.size} id=checker patternUnits=userSpaceOnUse width=${i.size} x=0 y=0><rect class=${p(h.checker)} height=${i.squareSize} width=${i.squareSize} x=0 y=0 /><rect class=${p(h.checker)} height=${i.squareSize} width=${i.squareSize} x=${i.squareSize} y=${i.squareSize} /></pattern></defs>${this.renderSwatchRect({\n      fill: \"url(#checker)\",\n      rx: t.rx,\n      height: t.height,\n      width: t.width\n    })}${this.renderSwatchRect({\n      clipPath: n < 1 ? \"polygon(100% 0, 0 0, 0 100%)\" : `inset(0 round ${o})`,\n      fill: f,\n      ...t\n    })}${n < 1 ? this.renderSwatchRect({\n      clipPath: \"polygon(100% 0, 100% 100%, 0 100%)\",\n      fill: w,\n      key: \"opacity-fill\",\n      ...t\n    }) : null}`;\n  }\n  renderSwatchRect({ clipPath: e, fill: c, height: s, key: o, rx: m, stroke: a, strokeWidth: l, width: t }) {\n    return k(o, d`<rect clip-path=${e ?? r} fill=${c ?? r} height=${s ?? r} rx=${m ?? r} stroke=${a ?? r} stroke-width=${l ?? r} width=${t ?? r} />`);\n  }\n}\nS(\"calcite-color-picker-swatch\", q);\nexport {\n  q as ColorPickerSwatch\n};\n","import v from \"color\";\nimport { h as I, i as R, j as b } from \"./global.js\";\n/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.1.0 */\nconst w = {\n  channel: \"channel\",\n  channels: \"channels\",\n  colorField: \"color-field\",\n  colorFieldScope: \"scope--color-field\",\n  colorMode: \"color-mode\",\n  colorModeContainer: \"color-mode-container\",\n  container: \"container\",\n  control: \"control\",\n  controlAndScope: \"control-and-scope\",\n  controlSection: \"control-section\",\n  deleteColor: \"delete-color\",\n  header: \"header\",\n  hexAndChannelsGroup: \"hex-and-channels-group\",\n  hexOptions: \"color-hex-options\",\n  hueScope: \"scope--hue\",\n  hueSlider: \"hue-slider\",\n  opacityScope: \"scope--opacity\",\n  opacitySlider: \"opacity-slider\",\n  preview: \"preview\",\n  previewAndSliders: \"preview-and-sliders\",\n  saveColor: \"save-color\",\n  savedColor: \"saved-color\",\n  savedColors: \"saved-colors\",\n  savedColorsButtons: \"saved-colors-buttons\",\n  savedColorsSection: \"saved-colors-section\",\n  scope: \"scope\",\n  section: \"section\",\n  slider: \"slider\",\n  sliders: \"sliders\",\n  splitSection: \"section--split\"\n}, y = v(\"#007AC2\"), z = \"calcite-color-\", X = {\n  r: 255,\n  g: 255,\n  b: 255\n}, B = {\n  h: 360,\n  s: 100,\n  v: 100\n}, N = B.h - 1, O = {\n  min: 0,\n  max: 100\n}, G = {\n  s: {\n    gap: parseInt(b),\n    slider: {\n      height: 12\n    },\n    thumb: {\n      radius: 7\n    },\n    preview: {\n      size: 20\n    },\n    minWidth: 200\n  },\n  m: {\n    gap: parseInt(R),\n    slider: {\n      height: 12\n    },\n    thumb: {\n      radius: 7\n    },\n    preview: {\n      size: 24\n    },\n    minWidth: 240\n  },\n  l: {\n    gap: parseInt(I),\n    slider: {\n      height: 12\n    },\n    thumb: {\n      radius: 7\n    },\n    preview: {\n      size: 32\n    },\n    minWidth: 304\n  }\n}, P = 1, D = /^[0-9A-F]$/i, E = /^#[0-9A-F]{3}$/i, M = /^#[0-9A-F]{6}$/i, $ = /^#[0-9A-F]{4}$/i, x = /^#[0-9A-F]{8}$/i, U = (t) => Number((t * 100).toFixed()), q = (t) => Number((t / 100).toFixed(2));\nfunction C(t, n = !1) {\n  return h(t, n) || F(t, n);\n}\nfunction g(t, n, r) {\n  return t ? t.length === n && r.test(t) : !1;\n}\nfunction h(t, n = !1) {\n  return g(t, n ? 5 : 4, n ? $ : E);\n}\nfunction F(t, n = !1) {\n  return g(t, n ? 9 : 7, n ? x : M);\n}\nfunction Y(t, n = !1, r = !1) {\n  if (t = t.toLowerCase(), t.startsWith(\"#\") || (t = `#${t}`), h(t, n))\n    return A(H(t, n));\n  if (n && r && C(\n    t,\n    !1\n    /* we only care about RGB hex for conversion */\n  )) {\n    const i = h(t, !1);\n    return A(H(`${t}${i ? \"f\" : \"ff\"}`, !0));\n  }\n  return t;\n}\nfunction j(t, n = !1) {\n  return n ? t.hexa() : t.hex();\n}\nfunction A(t) {\n  const { r: n, g: r, b: i } = t, o = S(n), a = S(r), d = S(i), l = \"a\" in t ? S(t.a * 255) : \"\";\n  return `#${o}${a}${d}${l}`.toLowerCase();\n}\nfunction S(t) {\n  return t.toString(16).padStart(2, \"0\");\n}\nfunction k(t) {\n  const n = {\n    ...t,\n    a: t.alpha ?? 1\n    /* Color() will omit alpha if 1 */\n  };\n  return delete n.alpha, n;\n}\nfunction K(t) {\n  const n = { ...t, alpha: t.a ?? 1 };\n  return delete n.a, n;\n}\nfunction H(t, n = !1) {\n  if (!C(t, n))\n    return null;\n  t = t.replace(\"#\", \"\");\n  let r, i, o, a;\n  if (t.length === 3 || t.length === 4) {\n    const [l, p, f, u] = t.split(\"\");\n    r = parseInt(`${l}${l}`, 16), i = parseInt(`${p}${p}`, 16), o = parseInt(`${f}${f}`, 16), a = parseInt(`${u}${u}`, 16) / 255;\n  } else\n    r = parseInt(t.slice(0, 2), 16), i = parseInt(t.slice(2, 4), 16), o = parseInt(t.slice(4, 6), 16), a = parseInt(t.slice(6, 8), 16) / 255;\n  return isNaN(a) ? { r, g: i, b: o } : { r, g: i, b: o, a };\n}\nconst L = (t) => t, e = L({\n  HEX: \"hex\",\n  HEXA: \"hexa\",\n  RGB_CSS: \"rgb-css\",\n  RGBA_CSS: \"rgba-css\",\n  HSL_CSS: \"hsl-css\",\n  HSLA_CSS: \"hsla-css\"\n}), s = L({\n  RGB: \"rgb\",\n  RGBA: \"rgba\",\n  HSL: \"hsl\",\n  HSLA: \"hsla\",\n  HSV: \"hsv\",\n  HSVA: \"hsva\"\n});\nfunction Z(t) {\n  if (typeof t == \"string\") {\n    if (t.startsWith(\"#\")) {\n      const { length: n } = t;\n      if (n === 4 || n === 7)\n        return e.HEX;\n      if (n === 5 || n === 9)\n        return e.HEXA;\n    }\n    if (t.startsWith(\"rgba(\"))\n      return e.RGBA_CSS;\n    if (t.startsWith(\"rgb(\"))\n      return e.RGB_CSS;\n    if (t.startsWith(\"hsl(\"))\n      return e.HSL_CSS;\n    if (t.startsWith(\"hsla(\"))\n      return e.HSLA_CSS;\n  }\n  if (typeof t == \"object\") {\n    if (c(t, \"r\", \"g\", \"b\"))\n      return c(t, \"a\") ? s.RGBA : s.RGB;\n    if (c(t, \"h\", \"s\", \"l\"))\n      return c(t, \"a\") ? s.HSLA : s.HSL;\n    if (c(t, \"h\", \"s\", \"v\"))\n      return c(t, \"a\") ? s.HSVA : s.HSV;\n  }\n  return null;\n}\nfunction c(t, ...n) {\n  return n.every((r) => r && t && `${r}` in t);\n}\nfunction J(t, n) {\n  return t?.rgb().array().toString() === n?.rgb().array().toString();\n}\nfunction Q(t) {\n  return t === e.HEXA || t === e.RGBA_CSS || t === e.HSLA_CSS || t === s.RGBA || t === s.HSLA || t === s.HSVA;\n}\nfunction V(t) {\n  return t === e.HEX ? e.HEXA : t === e.RGB_CSS ? e.RGBA_CSS : t === e.HSL_CSS ? e.HSLA_CSS : t === s.RGB ? s.RGBA : t === s.HSL ? s.HSLA : t === s.HSV ? s.HSVA : t;\n}\nfunction tt(t) {\n  return t === e.HEXA ? e.HEX : t === e.RGBA_CSS ? e.RGB_CSS : t === e.HSLA_CSS ? e.HSL_CSS : t === s.RGBA ? s.RGB : t === s.HSLA ? s.HSL : t === s.HSVA ? s.HSV : t;\n}\nconst T = 1, _ = T * 2;\nfunction nt(t, n, r) {\n  const i = r ? G.l.preview.size : n.preview.size, o = t - _, a = n.gap * 3;\n  return Math.max(o - a - i, 0);\n}\nfunction et(t) {\n  const r = t - _;\n  return {\n    width: Math.max(r, 0),\n    height: Math.max(Math.floor(r / 1.8), 0)\n  };\n}\nexport {\n  e as C,\n  y as D,\n  B as H,\n  O,\n  X as R,\n  G as S,\n  F as a,\n  h as b,\n  U as c,\n  D as d,\n  et as e,\n  z as f,\n  nt as g,\n  j as h,\n  C as i,\n  Q as j,\n  K as k,\n  J as l,\n  w as m,\n  Y as n,\n  q as o,\n  Z as p,\n  tt as q,\n  A as r,\n  N as s,\n  V as t,\n  k as u,\n  P as v,\n  H as w\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","import colorNames from 'color-name';\n\nconst reverseNames = Object.create(null);\n\n// Create a list of reverse color names\nfor (const name in colorNames) {\n\tif (Object.hasOwn(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nconst cs = {\n\tto: {},\n\tget: {},\n};\n\ncs.get = function (string) {\n\tconst prefix = string.slice(0, 3).toLowerCase();\n\tlet value;\n\tlet model;\n\tswitch (prefix) {\n\t\tcase 'hsl': {\n\t\t\tvalue = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'hwb': {\n\t\t\tvalue = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\t}\n\n\t\tdefault: {\n\t\t\tvalue = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!value) {\n\t\treturn null;\n\t}\n\n\treturn {model, value};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tconst abbr = /^#([a-f\\d]{3,4})$/i;\n\tconst hex = /^#([a-f\\d]{6})([a-f\\d]{2})?$/i;\n\tconst rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|/]\\s*([+-]?[\\d.]+)(%?)\\s*)?\\)$/;\n\tconst per = /^rgba?\\(\\s*([+-]?[\\d.]+)%\\s*,?\\s*([+-]?[\\d.]+)%\\s*,?\\s*([+-]?[\\d.]+)%\\s*(?:[,|/]\\s*([+-]?[\\d.]+)(%?)\\s*)?\\)$/;\n\tconst keyword = /^(\\w+)$/;\n\n\tlet rgb = [0, 0, 0, 1];\n\tlet match;\n\tlet i;\n\tlet hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tconst i2 = i * 2;\n\t\t\trgb[i] = Number.parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Number.parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Number.parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Number.parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Number.parseInt(match[i + 1], 10);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = match[5] ? Number.parseFloat(match[4]) * 0.01 : Number.parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(Number.parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = match[5] ? Number.parseFloat(match[4]) * 0.01 : Number.parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!Object.hasOwn(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tconst hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d.]+)%\\s*,?\\s*([+-]?[\\d.]+)%\\s*(?:[,|/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tconst match = string.match(hsl);\n\n\tif (match) {\n\t\tconst alpha = Number.parseFloat(match[4]);\n\t\tconst h = ((Number.parseFloat(match[1]) % 360) + 360) % 360;\n\t\tconst s = clamp(Number.parseFloat(match[2]), 0, 100);\n\t\tconst l = clamp(Number.parseFloat(match[3]), 0, 100);\n\t\tconst a = clamp(Number.isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tconst hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tconst match = string.match(hwb);\n\n\tif (match) {\n\t\tconst alpha = Number.parseFloat(match[4]);\n\t\tconst h = ((Number.parseFloat(match[1]) % 360) + 360) % 360;\n\t\tconst w = clamp(Number.parseFloat(match[2]), 0, 100);\n\t\tconst b = clamp(Number.parseFloat(match[3]), 0, 100);\n\t\tconst a = clamp(Number.isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function (...rgba) {\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function (...rgba) {\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function (...rgba) {\n\tconst r = Math.round(rgba[0] / 255 * 100);\n\tconst g = Math.round(rgba[1] / 255 * 100);\n\tconst b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function (...hsla) {\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// Hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function (...hwba) {\n\tlet a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (...rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// Helpers\nfunction clamp(number_, min, max) {\n\treturn Math.min(Math.max(min, number_), max);\n}\n\nfunction hexDouble(number_) {\n\tconst string_ = Math.round(number_).toString(16).toUpperCase();\n\treturn (string_.length < 2) ? '0' + string_ : string_;\n}\n\nexport default cs;\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nimport cssKeywords from 'color-name';\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']},\n};\n\nexport default convert;\n\n// LAB f(t) constant\nconst LAB_FT = (6 / 29) ** 3;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tswitch (max) {\n\t\tcase min: {\n\t\t\th = 0;\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase r: {\n\t\t\th = (g - b) / delta;\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase g: {\n\t\t\th = 2 + (b - r) / delta;\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase b: {\n\t\t\th = 4 + (r - g) / delta;\n\n\t\t\tbreak;\n\t\t}\n\t// No default\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tswitch (v) {\n\t\t\tcase r: {\n\t\t\t\th = bdif - gdif;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase g: {\n\t\t\t\th = (1 / 3) + rdif - bdif;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase b: {\n\t\t\t\th = (2 / 3) + gdif - rdif;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t// No default\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100,\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Number.POSITIVE_INFINITY;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.040_45 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.040_45 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.040_45 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.412_456_4) + (g * 0.357_576_1) + (b * 0.180_437_5);\n\tconst y = (r * 0.212_672_9) + (g * 0.715_152_2) + (b * 0.072_175);\n\tconst z = (r * 0.019_333_9) + (g * 0.119_192) + (b * 0.950_304_1);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > LAB_FT ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > LAB_FT ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > LAB_FT ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t3;\n\tlet value;\n\n\tif (s === 0) {\n\t\tvalue = l * 255;\n\t\treturn [value, value, value];\n\t}\n\n\tconst t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tvalue = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tvalue = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tvalue = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tvalue = t1;\n\t\t}\n\n\t\trgb[i] = value * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0: {\n\t\t\treturn [v, t, p];\n\t\t}\n\n\t\tcase 1: {\n\t\t\treturn [q, v, p];\n\t\t}\n\n\t\tcase 2: {\n\t\t\treturn [p, v, t];\n\t\t}\n\n\t\tcase 3: {\n\t\t\treturn [p, q, v];\n\t\t}\n\n\t\tcase 4: {\n\t\t\treturn [t, p, v];\n\t\t}\n\n\t\tcase 5: {\n\t\t\treturn [v, p, q];\n\t\t}\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\t// eslint-disable-next-line no-bitwise\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces, default-case-last */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: { r = v;  g = n;  b = wh; break;\n\t\t}\n\n\t\tcase 1: { r = n;  g = v;  b = wh; break;\n\t\t}\n\n\t\tcase 2: { r = wh; g = v;  b = n; break;\n\t\t}\n\n\t\tcase 3: { r = wh; g = n;  b = v; break;\n\t\t}\n\n\t\tcase 4: { r = n;  g = wh; b = v; break;\n\t\t}\n\n\t\tcase 5: { r = v;  g = wh; b = n; break;\n\t\t}\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces, default-case-last */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.240_454_2) + (y * -1.537_138_5) + (z * -0.498_531_4);\n\tg = (x * -0.969_266) + (y * 1.876_010_8) + (z * 0.041_556);\n\tb = (x * 0.055_643_4) + (y * -0.204_025_9) + (z * 1.057_225_2);\n\n\t// Assume sRGB\n\tr = r > 0.003_130_8\n\t\t? ((1.055 * (r ** (1 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.003_130_8\n\t\t? ((1.055 * (g ** (1 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.003_130_8\n\t\t? ((1.055 * (b ** (1 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > LAB_FT ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > LAB_FT ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > LAB_FT ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > LAB_FT ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > LAB_FT ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > LAB_FT ? z2 : (z - 16 / 116) / 7.787;\n\n\t// Illuminant D65 XYZ Tristrimulus Values\n\t// https://en.wikipedia.org/wiki/CIE_1931_color_space\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t/* eslint-disable no-bitwise */\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\t\t/* eslint-enable no-bitwise */\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\t// eslint-disable-next-line no-bitwise\n\tif (r >> 4 === g >> 4 && g >> 4 === b >> 4) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\targs = args[0];\n\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (Math.trunc(args > 50) + 1) * 0.5;\n\t/* eslint-disable no-bitwise */\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\t/* eslint-enable no-bitwise */\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\targs = args[0];\n\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\t/* eslint-disable no-bitwise */\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\t/* eslint-enable no-bitwise */\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.slice(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f\\d]{6}|[a-f\\d]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = [...colorString].map(char => char + char).join('');\n\t}\n\n\tconst integer = Number.parseInt(colorString, 16);\n\t/* eslint-disable no-bitwise */\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\t/* eslint-enable no-bitwise */\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet hue;\n\n\tconst grayscale = chroma < 1 ? min / (1 - chroma) : 0;\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else if (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else if (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2 * s * l) : (2 * s * (1 - l));\n\n\tlet f = 0;\n\tif (c < 1) {\n\t\tf = (l - 0.5 * c) / (1 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0: {\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\t}\n\n\t\tcase 1: {\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\t}\n\n\t\tcase 2: {\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\t}\n\n\t\tcase 3: {\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\t}\n\n\t\tcase 4: {\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\t}\n\n\t\tdefault: {\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t\t}\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255,\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1 - c);\n\tlet f = 0;\n\n\tif (v > 0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else if (l >= 0.5 && l < 1) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65_535) * 255, (apple[1] / 65_535) * 255, (apple[2] / 65_535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65_535, (rgb[1] / 255) * 65_535, (rgb[2] / 255) * 65_535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\t/* eslint-disable no-bitwise */\n\tconst value = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (value << 16) + (value << 8) + value;\n\t/* eslint-enable no-bitwise */\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.slice(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst value = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [value / 255 * 100];\n};\n","import conversions from './conversions.js';\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let {length} = models, i = 0; i < length; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null,\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length > 0) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let {length} = adjacents, i = 0; i < length; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nfunction route(fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let {length} = models, i = 0; i < length; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n}\n\nexport default route;\n","import conversions from './conversions.js';\nimport route from './route.js';\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let {length} = result, i = 0; i < length; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfor (const fromModel of models) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\tfor (const toModel of routeModels) {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t}\n}\n\nexport default convert;\n","import colorString from 'color-string';\nimport convert from 'color-convert';\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst arguments_ = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](...arguments_);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst arguments_ = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(...arguments_);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(...this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(...rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_colour_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...arguments_) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments_.length > 0) {\n\t\t\treturn new Color(arguments_, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...arguments_) {\n\t\tlet color = arguments_[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(arguments_, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] ||= [])[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nexport default Color;\n"],"names":["c","max","a","i","t","e","n","s","x","o","p","h","g","$","v","b","q","y","constructor","super","arguments","this","active","scale","properties","color","styles","load","handleColorChange","willUpdate","has","internalColor","z","render","C","renderSwatch","el","height","rx","stroke","strokeWidth","width","d","r","renderSwatchRect","clipPath","alpha","f","u","w","fill","key","_ref","m","l","k","S","channel","channels","colorField","colorFieldScope","colorMode","colorModeContainer","container","control","controlAndScope","controlSection","deleteColor","header","hexAndChannelsGroup","hexOptions","hueScope","hueSlider","opacityScope","opacitySlider","preview","previewAndSliders","saveColor","savedColor","savedColors","savedColorsButtons","savedColorsSection","scope","section","slider","sliders","splitSection","X","B","N","O","min","G","gap","parseInt","thumb","radius","size","minWidth","R","I","P","D","E","M","U","Number","toFixed","length","undefined","F","test","Y","toLowerCase","startsWith","A","H","j","hexa","hex","toString","padStart","K","replace","split","slice","isNaN","HEX","HEXA","RGB_CSS","RGBA_CSS","HSL_CSS","HSLA_CSS","RGB","RGBA","HSL","HSLA","HSV","HSVA","Z","_len","Array","_key","every","J","rgb","array","Q","V","tt","_","T","nt","Math","et","floor","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","reverseNames","Object","create","name","colorNames","hasOwn","cs","to","get","clamp","number_","hexDouble","string_","round","toUpperCase","string","value","model","hsl","hwb","match","hexAlpha","i2","parseFloat","percent","keyword","reverseKeywords","keys","cssKeywords","convert","labels","hsv","cmyk","xyz","lab","lch","ansi16","ansi256","hcg","apple","LAB_FT","Error","defineProperty","deriveBFS","fromModel","graph","models","conversions","distance","parent","buildGraph","queue","current","pop","adjacents","adjacent","node","unshift","link","from","args","wrapConversion","toModel","path","fn","cur","conversion","delta","rdif","gdif","bdif","diff","diffc","reversed","currentClosestKeyword","currentClosestDistance","POSITIVE_INFINITY","t3","t2","t1","smin","lmin","hi","vmin","sl","wh","bl","ratio","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","saturation","ansi","mult","trunc","rem","colorString","map","char","join","integer","chroma","hue","pure","mg","wrapRaw","wrappedFn","arg0","wrapRounded","_len2","_key2","result","routes","route","routeModels","raw","skippedModels","hashedModelKeys","sort","limiters","Color","object","valpha","newArray","prototype","call","zeroArray","splice","indexOf","hashedKeys","JSON","stringify","push","limit","freeze","toJSON","places","self","arguments_","percentString","unitArray","unitObject","roundToPlace","getset","maxfn","saturationl","lightness","saturationv","wblack","rgbArray","alphaHex","rgbNumber","luminosity","lum","element","entries","chan","contrast","color2","lum1","lum2","level","contrastRatio","isDark","isLight","negate","lighten","darken","saturate","desaturate","whiten","blacken","grayscale","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","includes","isArray","number","roundTo","modifier"],"sourceRoot":""}