"use strict";(self.webpackChunkn2_tree=self.webpackChunkn2_tree||[]).push([[39323],{39323:(e,r,t)=>{t.d(r,{L:()=>c});var n=t(55171),a=t(3825),l=t(50076),o=t(50346),i=t(13096),s=t(24883),u=t(98662);async function c(e,r){const t=(0,i.qg)(e);if(!t)throw new l.default("invalid-url","Invalid scene service url");const c={...r,sceneServerUrl:t.url.path,layerId:t.sublayer??void 0};if(c.sceneLayerItem??=await async function(e){const r=(await f(e)).serviceItemId;if(!r)return null;const t=new u.default({id:r,apiKey:e.apiKey}),l=await async function(e){const r=n.id?.findServerInfo(e.sceneServerUrl);if(r?.owningSystemUrl)return r.owningSystemUrl;const t=e.sceneServerUrl.replace(/(.*\/rest)\/.*/i,"$1")+"/info";try{const r=(await(0,a.default)(t,{query:{f:"json"},responseType:"json",signal:e.signal})).data.owningSystemUrl;if(r)return r}catch(y){(0,o.throwIfAbortError)(y)}return null}(e);null!=l&&(t.portal=new s.default({url:l}));try{return await t.load({signal:e.signal})}catch(w){return(0,o.throwIfAbortError)(w),null}}(c),null==c.sceneLayerItem)return d(c.sceneServerUrl.replace("/SceneServer","/FeatureServer"),c);const y=await async function(e){let{sceneLayerItem:r,signal:t}=e;if(!r)return null;try{const e=(await r.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:t})).find((e=>"Feature Service"===e.type))||null;if(!e)return null;const n=new u.default({portal:e.portal,id:e.id});return await n.load(),n}catch(n){return(0,o.throwIfAbortError)(n),null}}(c);if(!y?.url)throw new l.default("related-service-not-found","Could not find feature service through portal item relationship");c.featureServiceItem=y;const w=await d(y.url,c);return w.portalItem=y,w}async function f(e){if(e.rootDocument)return e.rootDocument;const r={query:{f:"json",...e.customParameters,token:e.apiKey},responseType:"json",signal:e.signal};try{const t=await(0,a.default)(e.sceneServerUrl,r);e.rootDocument=t.data}catch{e.rootDocument={}}return e.rootDocument}async function d(e,r){const t=(0,i.qg)(e);if(!t)throw new l.default("invalid-feature-service-url","Invalid feature service url");const n=t.url.path,o=r.layerId;if(null==o)return{serverUrl:n};const s=f(r),u=r.featureServiceItem?await r.featureServiceItem.fetchData("json"):null,c=(u?.layers?.[0]||u?.tables?.[0])?.customParameters,d=e=>{const t={query:{f:"json",...c},responseType:"json",authMode:e,signal:r.signal};return(0,a.default)(n,t)},y=d("anonymous").catch((()=>d("no-prompt"))),[w,h]=await Promise.all([y,s]),v=h?.layers,p=w.data&&w.data.layers;if(!Array.isArray(p))throw new Error("expected layers array");if(Array.isArray(v)){for(let a=0;a<Math.min(v.length,p.length);a++)if(v[a].id===o)return{serverUrl:n,layerId:p[a].id}}else if(null!=o&&o<p.length)return{serverUrl:n,layerId:p[o].id};throw new Error("could not find matching associated sublayer")}}}]);
//# sourceMappingURL=39323.be3758ca.chunk.js.map