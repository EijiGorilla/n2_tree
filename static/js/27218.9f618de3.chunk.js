"use strict";(self.webpackChunkn2_tree=self.webpackChunkn2_tree||[]).push([[20176,27218],{1484:(e,t,n)=>{n.d(t,{A:()=>s});var r=n(97255);class s{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];this.lengths=e??[],this.coords=t??[]}static fromJSON(e){return new s(e.lengths,e.coords)}static fromRect(e){const[t,n,r,i]=e,o=r-t,a=i-n;return new s([5],[t,n,o,0,0,a,-o,0,0,-a])}get isPoint(){return 0===this.lengths.length&&this.coords.length>=2}get maxLength(){return Math.max(...this.lengths)}get size(){return this.lengths.reduce(((e,t)=>e+t))}get usedMemory(){return 64+(0,r.Qf)(this.lengths,this.coords)}area(){let e=0,t=0;if(!this.lengths.length)return 0;for(let n=0;n<this.lengths.length;n++){const r=this.lengths[n];if(r<3)continue;let s=this.coords[2*t],i=this.coords[2*t+1];for(let n=1;n<r;n+=1){const r=this.coords[2*(n+t)],o=this.coords[2*(n+t)+1];e+=-.5*(r-s)*(o+i),s=r,i=o}t+=r}return e}forEachVertex(e){let t=0;this.lengths.length||e(this.coords[0],this.coords[1]);for(let n=0;n<this.lengths.length;n++){const r=this.lengths[n];for(let n=0;n<r;n++)e(this.coords[2*(n+t)],this.coords[2*(n+t)+1]);t+=r}}deltaDecode(){const e=this.clone(),{coords:t,lengths:n}=e;let r=0;for(const s of n){for(let e=1;e<s;e++)t[2*(r+e)]+=t[2*(r+e)-2],t[2*(r+e)+1]+=t[2*(r+e)-1];r+=s}return e}clone(e){if(0===this.lengths.length)return new s([],[this.coords[0],this.coords[1]]);const t=2*(0===this.lengths.length?1:this.lengths.reduce(((e,t)=>e+t))),n=this.coords.slice(0,t);return e?(e.set(n),new s(this.lengths,e)):new s(Array.from(this.lengths),Array.from(n))}}},20176:(e,t,n)=>{n.d(t,{N3:()=>a,Om:()=>o});var r=n(97255),s=n(90321),i=n(1484);class o{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;this.geometry=e,this.attributes=t,this.centroid=n,this.objectId=r,this.displayId=s}static fromJSON(e){const t=e.geometry?i.A.fromJSON(e.geometry):null,n=e.centroid?i.A.fromJSON(e.centroid):null,r=e.objectId;return new o(t,e.attributes,n,r)}weakClone(){const e=new o(this.geometry,this.attributes,this.centroid,this.objectId);return e.displayId=this.displayId,e}clone(){const e=this.geometry?.clone(),t=new o(e,{...this.attributes},this.centroid?.clone(),this.objectId);return t.displayId=this.displayId,t}ensureCentroid(e){return this.centroid??=(0,s.Q)(new i.A,this.geometry,e.hasZ,e.hasM),this.centroid}get usedMemory(){return 128+(0,r.lM)(this.attributes)+(this.geometry?.usedMemory??0)}}function a(e){return!!e.geometry?.coords?.length}},20904:(e,t,n)=>{n.r(t),n.d(t,{default:()=>I});var r=n(4212),s=n(90632),i=n(13312),o=n(86729),a=n(99784),l=n(98618),u=n(44135);function h(e,t){return t}function c(e,t,n,r){switch(n){case 0:return p(e,t+r,0);case 1:return"lowerLeft"===e.originPosition?p(e,t+r,1):function(e,t,n){let{translate:r,scale:s}=e;return r[n]-t*s[n]}(e,t+r,1)}}function f(e,t,n,r){return 2===n?p(e,t,2):c(e,t,n,r)}function d(e,t,n,r){return 2===n?p(e,t,3):c(e,t,n,r)}function m(e,t,n,r){return 3===n?p(e,t,3):f(e,t,n,r)}function p(e,t,n){let{translate:r,scale:s}=e;return r[n]+t*s[n]}class y{constructor(e){this._options=e,this.geometryTypes=["point","multipoint","polyline","polygon"],this._previousCoordinate=[0,0],this._transform=null,this._applyTransform=h,this._lengths=[],this._currentLengthIndex=0,this._toAddInCurrentPath=0,this._vertexDimension=0,this._coordinateBuffer=null,this._coordinateBufferPtr=0,this._attributesConstructor=class{},this._missingAttributes=[]}get missingAttributes(){return this._missingAttributes}createFeatureResult(){return new a.jy}finishFeatureResult(e){if(this._options.applyTransform&&(e.transform=null),this._attributesConstructor=class{},this._coordinateBuffer=null,this._lengths.length=0,!e.hasZ)return;const t=(0,o.N)(e.geometryType,this._options.sourceSpatialReference,e.spatialReference);if(null!=t)for(const n of e.features)t(n.geometry)}createSpatialReference(){return new i.default}addField(e,t){e.fields.push(u.default.fromJSON(t));const n=e.fields.map((e=>e.name));this._attributesConstructor=function(){for(const e of n)this[e]=null}}addFeature(e,t){const n=this._options.maxStringAttributeLength,r=this._options.maxStringAttributeFields;(0,a.Uz)(t.attributes,r,n,(n=>{const r=t.attributes[e.objectIdFieldName];null!=r&&this._missingAttributes.push({objectId:r,attribute:n})})),e.features.push(t)}addQueryGeometry(e,t){const{queryGeometry:n,queryGeometryType:r}=t,s=this._transform?(0,l.Ch)(n.clone(),n,!1,!1,this._transform):n.clone(),i=(0,l.zv)(s,r,!1,!1);switch(r){case"esriGeometryPoint":i.type="point";break;case"esriGeometryPolygon":i.type="polygon";break;case"esriGeometryPolyline":i.type="polyline";break;case"esriGeometryMultipoint":i.type="multipoint"}e.queryGeometryType=r,e.queryGeometry=i}prepareFeatures(e){switch(this._transform=e.transform??null,this._options.applyTransform&&e.transform&&(this._applyTransform=this._deriveApplyTransform(e)),this._vertexDimension=2,e.hasZ&&this._vertexDimension++,e.hasM&&this._vertexDimension++,e.geometryType){case"point":this.addCoordinate=(e,t,n)=>this.addCoordinatePoint(e,t,n),this.createGeometry=e=>this.createPointGeometry(e);break;case"polygon":this.addCoordinate=(e,t,n)=>this._addCoordinatePolygon(e,t,n),this.createGeometry=e=>this._createPolygonGeometry(e);break;case"polyline":this.addCoordinate=(e,t,n)=>this._addCoordinatePolyline(e,t,n),this.createGeometry=e=>this._createPolylineGeometry(e);break;case"multipoint":this.addCoordinate=(e,t,n)=>this._addCoordinateMultipoint(e,t,n),this.createGeometry=e=>this._createMultipointGeometry(e);break;case"mesh":case"extent":break;default:(0,r.Xb)(e.geometryType)}}createFeature(){return this._lengths.length=0,this._currentLengthIndex=0,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0,new a.HP((0,s.c)(),null,new this._attributesConstructor)}allocateCoordinates(){const e=this._lengths.reduce(((e,t)=>e+t),0);this._coordinateBuffer=new Float64Array(e*this._vertexDimension),this._coordinateBufferPtr=0}addLength(e,t){0===this._lengths.length&&(this._toAddInCurrentPath=t),this._lengths.push(t)}createPointGeometry(e){const t={type:"point",x:0,y:0,spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM};return t.hasZ&&(t.z=0),t.hasM&&(t.m=0),t}addCoordinatePoint(e,t,n){const r=this._transform?this._applyTransform(this._transform,t,n,0):t;if(null!=r)switch(n){case 0:e.x=r;break;case 1:e.y=r;break;case 2:e.hasZ?e.z=r:e.m=r;break;case 3:e.m=r}}_transformPathLikeValue(e,t){let n=0;return t<=1&&(n=this._previousCoordinate[t],this._previousCoordinate[t]+=e),this._transform?this._applyTransform(this._transform,e,t,n):e}_addCoordinatePolyline(e,t,n){this._dehydratedAddPointsCoordinate(e.paths,t,n)}_addCoordinatePolygon(e,t,n){this._dehydratedAddPointsCoordinate(e.rings,t,n)}_addCoordinateMultipoint(e,t,n){0===n&&e.points.push([]);const r=this._transformPathLikeValue(t,n);e.points[e.points.length-1].push(r)}_createPolygonGeometry(e){return{type:"polygon",rings:[[]],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_createPolylineGeometry(e){return{type:"polyline",paths:[[]],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_createMultipointGeometry(e){return{type:"multipoint",points:[],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_dehydratedAddPointsCoordinate(e,t,n){0===n&&0==this._toAddInCurrentPath--&&(e.push([]),this._toAddInCurrentPath=this._lengths[++this._currentLengthIndex]-1,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0);const r=this._transformPathLikeValue(t,n),s=e[e.length-1],i=this._coordinateBuffer;if(i){if(0===n){const e=this._coordinateBufferPtr*Float64Array.BYTES_PER_ELEMENT;s.push(new Float64Array(i.buffer,e,this._vertexDimension))}i[this._coordinateBufferPtr++]=r}}_deriveApplyTransform(e){const{hasZ:t,hasM:n}=e;return t&&n?m:t?f:n?d:c}}var g=n(89122);class b{_parseFeatureQuery(e){const t=new y(e.options),n=(0,g.m)(e.buffer,t),r={...n,spatialReference:n.spatialReference?.toJSON(),fields:n.fields?n.fields.map((e=>e.toJSON())):void 0,missingAttributes:t.missingAttributes};return Promise.resolve(r)}}function I(){return new b}},28660:(e,t,n)=>{n.d(t,{B1:()=>i,ab:()=>a,bR:()=>o,mK:()=>s});var r=n(81806);function s(){return(0,r.A)("curve-densification-coarse-segments")}function i(){return(0,r.A)("curve-densification-max-segments")}function o(){return(0,r.A)("curve-densification-min-segments")}function a(){return(0,r.A)("curve-densification-pixels-per-segment")}},74e3:(e,t,n)=>{n.d(t,{CI:()=>a,aI:()=>h,fk:()=>l});n(81806);var r=n(15941),s=n(80963);function i(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(r.length!==s.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==s[e])return!1}return!0}function o(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(!i(e[n],t[n]))return!1;return!0}function a(e,t){return e===t||null!=e&&null!=t&&(0,s.aI)(e.spatialReference,t.spatialReference)&&e.x===t.x&&e.y===t.y&&e.z===t.z&&e.m===t.m}function l(e,t,n){return e===t||null!=e&&null!=t&&(0,s.aI)(e.spatialReference,t.spatialReference)&&(0,r.Sp)(e.x,t.x,n)&&(0,r.Sp)(e.y,t.y,n)&&(0,r.Sp)(e.z??0,t.z??0,n)&&(0,r.Sp)(e.m??0,t.m??0,n)}function u(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.type!==t.type)return!1;switch(e.type){case"point":return a(e,t);case"extent":return function(e,t){return e.hasZ===t.hasZ&&e.hasM===t.hasM&&!!(0,s.aI)(e.spatialReference,t.spatialReference)&&e.xmin===t.xmin&&e.ymin===t.ymin&&e.zmin===t.zmin&&e.xmax===t.xmax&&e.ymax===t.ymax&&e.zmax===t.zmax}(e,t);case"polyline":return function(e,t){return e.hasZ===t.hasZ&&e.hasM===t.hasM&&!!(0,s.aI)(e.spatialReference,t.spatialReference)&&o(e.paths,t.paths)}(e,t);case"polygon":return function(e,t){return e.hasZ===t.hasZ&&e.hasM===t.hasM&&!!(0,s.aI)(e.spatialReference,t.spatialReference)&&o(e.rings,t.rings)}(e,t);case"multipoint":return function(e,t){return e.hasZ===t.hasZ&&e.hasM===t.hasM&&!!(0,s.aI)(e.spatialReference,t.spatialReference)&&i(e.points,t.points)}(e,t);case"mesh":return!1;default:return}}function h(e,t){return e===t||null!=e&&null!=t&&e.objectId===t.objectId&&!!u(e.geometry,t.geometry)&&!!function(e,t){if(e===t)return!0;if(!e||!t)return!1;const n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(const s of n)if(e[s]!==t[s])return!1;return!0}(e.attributes,t.attributes)}},75146:(e,t,n)=>{n.d(t,{A:()=>r});class r{constructor(){this.objectIdFieldName=null,this.globalIdFieldName=null,this.geohashFieldName=null,this.geometryProperties=null,this.geometryType=null,this.spatialReference=null,this.hasZ=!1,this.hasM=!1,this.features=[],this.fields=[],this.transform=null,this.exceededTransferLimit=!1,this.uniqueIdField=null,this.queryGeometryType=null,this.queryGeometry=null}weakClone(){const e=new r;return e.objectIdFieldName=this.objectIdFieldName,e.globalIdFieldName=this.globalIdFieldName,e.geohashFieldName=this.geohashFieldName,e.geometryProperties=this.geometryProperties,e.geometryType=this.geometryType,e.spatialReference=this.spatialReference,e.hasZ=this.hasZ,e.hasM=this.hasM,e.features=this.features,e.fields=this.fields,e.transform=this.transform,e.exceededTransferLimit=this.exceededTransferLimit,e.uniqueIdField=this.uniqueIdField,e.queryGeometry=this.queryGeometry,e.queryGeometryType=this.queryGeometryType,e}}},90321:(e,t,n)=>{function r(e,t){return e?t?4:3:t?3:2}function s(e,t,n,s){if(!t?.lengths.length)return null;e.lengths.length&&(e.lengths.length=0),e.coords.length&&(e.coords.length=0);const a=e.coords,l=[],u=n?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:h,coords:c}=t,f=r(n,s);let d=0;for(const r of h){const e=i(u,c,d,r,n,s);e&&l.push(e),d+=r*f}if(l.sort(((e,t)=>{let r=e[2]-t[2];return 0===r&&n&&(r=e[4]-t[4]),r})),l.length){let e=6*l[0][2];a[0]=l[0][0]/e,a[1]=l[0][1]/e,n&&(e=6*l[0][4],a[2]=0!==e?l[0][3]/e:0),(a[0]<u[0]||a[0]>u[1]||a[1]<u[2]||a[1]>u[3]||n&&(a[2]<u[4]||a[2]>u[5]))&&(a.length=0)}if(!a.length){const e=t.lengths[0]?o(c,0,h[0],n,s):null;if(!e)return null;a[0]=e[0],a[1]=e[1],n&&e.length>2&&(a[2]=e[2])}return e}function i(e,t,n,s,i,o){const a=r(i,o);let l=n,u=n+a,h=0,c=0,f=0,d=0,m=0;for(let r=0,y=s-1;r<y;r++,l+=a,u+=a){const n=t[l],r=t[l+1],s=t[l+2],o=t[u],a=t[u+1],p=t[u+2];let y=n*a-o*r;d+=y,h+=(n+o)*y,c+=(r+a)*y,i&&(y=n*p-o*s,f+=(s+p)*y,m+=y),n<e[0]&&(e[0]=n),n>e[1]&&(e[1]=n),r<e[2]&&(e[2]=r),r>e[3]&&(e[3]=r),i&&(s<e[4]&&(e[4]=s),s>e[5]&&(e[5]=s))}if(d>0&&(d*=-1),m>0&&(m*=-1),!d)return null;const p=[h,c,.5*d];return i&&(p[3]=f,p[4]=.5*m),p}function o(e,t,n,s,i){const o=r(s,i);let c=t,f=t+o,d=0,m=0,p=0,y=0;for(let r=0,g=n-1;r<g;r++,c+=o,f+=o){const t=e[c],n=e[c+1],r=e[c+2],i=e[f],o=e[f+1],g=e[f+2],b=s?l(t,n,r,i,o,g):a(t,n,i,o);if(b)if(d+=b,s){const e=h(t,n,r,i,o,g);m+=b*e[0],p+=b*e[1],y+=b*e[2]}else{const e=u(t,n,i,o);m+=b*e[0],p+=b*e[1]}}return d>0?s?[m/d,p/d,y/d]:[m/d,p/d]:n>0?s?[e[t],e[t+1],e[t+2]]:[e[t],e[t+1]]:null}function a(e,t,n,r){const s=n-e,i=r-t;return Math.sqrt(s*s+i*i)}function l(e,t,n,r,s,i){const o=r-e,a=s-t,l=i-n;return Math.sqrt(o*o+a*a+l*l)}function u(e,t,n,r){return[e+.5*(n-e),t+.5*(r-t)]}function h(e,t,n,r,s,i){return[e+.5*(r-e),t+.5*(s-t),n+.5*(i-n)]}n.d(t,{Q:()=>s})},97255:(e,t,n)=>{n.d(t,{$B:()=>s,Qf:()=>u,Qh:()=>a,RS:()=>i,ez:()=>f,i5:()=>d,lM:()=>o,qK:()=>c,rq:()=>h});var r=n(78393);function s(e){return 32+e.length}const i=16;function o(e){if(!e)return 0;let t=c;for(const n in e)e.hasOwnProperty(n)&&(t+=l(e[n],!1));return t}function a(e){if(!e)return 0;if("number"==typeof e[0])return u(e);if(Array.isArray(e))return function(e){const t=e.length;if(0===t||"number"==typeof e[0])return h(e,8);let n=f;for(let r=0;r<t;r++)n+=l(e[r]);return n}(e);let t=c;for(const n in e)e.hasOwnProperty(n)&&(t+=l(e[n]));return t}function l(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];switch(typeof e){case"object":return t?a(e):c;case"string":return s(e);case"number":return i;case"boolean":return 4;default:return 8}}function u(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.reduce(((e,t)=>e+(t?(0,r.iu)(t)?t.byteLength+d:Array.isArray(t)?h(t,i):0:0)),0)}function h(e,t){return f+e.length*t}const c=32,f=16,d=145},99784:(e,t,n)=>{n.d(t,{Ek:()=>b,HP:()=>f,JS:()=>p,Kq:()=>I,N3:()=>d,RW:()=>T,Uz:()=>P,ao:()=>_,gR:()=>g,iQ:()=>x,jy:()=>m,w9:()=>N});n(81806);var r=n(97255),s=n(90632),i=n(13312),o=n(42294),a=n(2413),l=n(76279),u=n(31608),h=n(44135),c=n(28660);n(74e3);class f{constructor(e,t,n){this.uid=e,this.geometry=t,this.attributes=n,this.visible=!0,this.objectId=null,this.centroid=null}}function d(e){return null!=e.geometry}class m{constructor(){this.exceededTransferLimit=!1,this.features=[],this.fields=[],this.hasM=!1,this.hasZ=!1,this.geometryType=null,this.objectIdFieldName=null,this.globalIdFieldName=null,this.geometryProperties=null,this.geohashFieldName=null,this.spatialReference=null,this.transform=null}}function p(e,t){const n=u.gy.fromJSON(e.geometryType),r=i.default.fromJSON(e.spatialReference),o=e.transform,a=e.objectIdFieldName,c=t?.maxStringAttributeLength,f=t?.maxStringAttributeFields;let d;const m=e.features.map((t=>{const i=function(e,t,n,r){return{uid:(0,s.c)(),objectId:r&&e.attributes?e.attributes[r]:null,attributes:e.attributes,geometry:y(e.geometry,t,n),visible:!0}}(t,n,r,e.objectIdFieldName),u=i.geometry;if(P(i.attributes,f,c,(e=>{d??=[];const t=T(i,a);null!=t&&d.push({objectId:t,attribute:e})})),null!=u&&o)switch(u.type){case"point":i.geometry=(0,l.Tr)(o,u,u);break;case"multipoint":i.geometry=(0,l.SW)(o,u,u);break;case"polygon":i.geometry=(0,l.$X)(o,u,u);break;case"polyline":i.geometry=(0,l.P5)(o,u,u);break;case"extent":case"mesh":i.geometry=u}return i}));return{geometryType:n,features:m,spatialReference:r,fields:e.fields?.map((e=>h.default.fromJSON(e)))??[],objectIdFieldName:e.objectIdFieldName,globalIdFieldName:e.globalIdFieldName,geohashFieldName:e.geohashFieldName,geometryProperties:e.geometryProperties,hasZ:e.hasZ,hasM:e.hasM,exceededTransferLimit:e.exceededTransferLimit,transform:null,missingAttributes:d}}function y(e,t,n){if(null==e)return null;switch(t){case"point":{const t=e;return{x:t.x,y:t.y,z:t.z,m:t.m,hasZ:null!=t.z,hasM:null!=t.m,type:"point",spatialReference:n}}case"polyline":{const t=e;return{paths:t.paths,hasZ:!!t.hasZ,hasM:!!t.hasM,type:"polyline",spatialReference:n}}case"polygon":{const t=e;return{rings:t.rings,hasZ:!!t.hasZ,hasM:!!t.hasM,type:"polygon",spatialReference:n}}case"multipoint":{const t=e;return{points:t.points,hasZ:!!t.hasZ,hasM:!!t.hasM,type:"multipoint",spatialReference:n}}}}function g(e){if(null==e)return 0;switch(e.type){case"point":return r.qK+10+8+24;case"polyline":case"polygon":{let t=0;const n=2+(e.hasZ?1:0)+(e.hasM?1:0),s="polyline"===e.type?e.paths:e.rings,i="polyline"===e.type?e.curvePaths:e.curveRings;if(i?.length){const e=3*(0,c.B1)()*128;t=8*e*n+128*e+32*(s.length+1)}else t=(0,r.Qh)(s);return r.qK+64+t+34}case"multipoint":{const t=(0,r.Qh)(e.points);return r.qK+t+64+34+32}case"extent":return r.qK+10+64+34;case"mesh":{const t=e.vertexAttributes;return r.qK+(0,r.Qf)(t.position,t.normal,t.uv,t.tangent)}default:return r.qK}}function b(e){let t=32;return t+=(0,r.lM)(e.attributes),t+=3,t+=8+g(e.geometry),t}function I(e){if(null==e)return 0;switch(e.type){case"point":return 1;case"polyline":{let t=0;for(const n of e.paths)t+=n.length;return t}case"polygon":{let t=0;for(const n of e.rings)t+=n.length;return t}case"multipoint":return e.points.length;case"extent":return 2;case"mesh":{const t=e.vertexAttributes&&e.vertexAttributes.position;return t?t.length/3:0}default:return}}function _(e){if(null==e)return!1;switch(e.type){case"extent":case"point":return!0;case"polyline":for(const t of e.paths)if(t.length>0)return!0;return!1;case"polygon":for(const t of e.rings)if(t.length>0)return!0;return!1;case"multipoint":return e.points.length>0;case"mesh":return!e.loaded||e.vertexAttributes.position.length>0}}function N(e,t){switch((0,o.Ie)(t),"mesh"===e.type&&(e=e.extent),e.type){case"point":t[0]=t[3]=e.x,t[1]=t[4]=e.y,e.hasZ&&(t[2]=t[5]=e.z);break;case"polyline":for(let n=0;n<e.paths.length;n++)(0,o.Jf)(t,e.paths[n],!!e.hasZ);break;case"polygon":for(let n=0;n<e.rings.length;n++)(0,o.Jf)(t,e.rings[n],!!e.hasZ);break;case"multipoint":(0,o.Jf)(t,e.points,!!e.hasZ);break;case"extent":t[0]=e.xmin,t[1]=e.ymin,t[3]=e.xmax,t[4]=e.ymax,null!=e.zmin&&(t[2]=e.zmin),null!=e.zmax&&(t[5]=e.zmax)}}function x(e,t){switch((0,a.Ie)(t),"mesh"===e.type&&(e=e.extent),e.type){case"point":t[0]=t[2]=e.x,t[1]=t[3]=e.y;break;case"polyline":for(let n=0;n<e.paths.length;n++)(0,a.Jf)(t,e.paths[n]);break;case"polygon":for(let n=0;n<e.rings.length;n++)(0,a.Jf)(t,e.rings[n]);break;case"multipoint":(0,a.Jf)(t,e.points);break;case"extent":t[0]=e.xmin,t[1]=e.ymin,t[2]=e.xmax,t[3]=e.ymax}}function T(e,t){return null!=e.objectId?e.objectId:e.attributes&&t?e.attributes[t]:null}function P(e,t,n,r){if(t?.size&&null!=n&&e)for(const s in e){if(!t.has(s))continue;const i=e[s];"string"==typeof i&&i.length>n&&(r(s),e[s]="")}}}}]);
//# sourceMappingURL=27218.9f618de3.chunk.js.map