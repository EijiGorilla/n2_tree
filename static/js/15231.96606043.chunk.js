"use strict";(self.webpackChunkn2_tree=self.webpackChunkn2_tree||[]).push([[15231],{15231:(e,n,r)=>{r.r(n),r.d(n,{default:()=>o});var i=r(50076),a=r(28383),t=r(90494),s=r(11563);async function o(e){const{layerAdapter:n,...r}=await async function(e){if(!(e&&e.layer&&e.view&&e.fields))throw new i.default("predominant-categories:missing-parameters","'layer', 'view' and 'fields' parameters are required");e.forBinning&&(0,t.p)(e,"predominant-categories");const{layer:n,...r}=e,o=e.forBinning?s.Mi:s.G3,d=(0,s.Jg)(n,o,e.forBinning);if(!d)throw new i.default("predominant-categories:invalid-parameters","'layer' must be one of these types: "+(0,s.Ho)(o).join(", "));const p={layerAdapter:d,...r};await Promise.all([p.view.when(),d.load({signal:p.signal})]);const l=(0,a.MH)(d,p.fields,"predominant-categories:invalid-parameters");if(l)throw l;return p}(e);return n.predominantCategories(r)}},90494:(e,n,r)=>{r.d(n,{p:()=>t,z:()=>a});var i=r(50076);const a="aggregateCount";function t(e,n){if(!e.view)throw new i.default(`${n}:missing-parameters`,"'view' parameter is required for binning");if(e.sqlExpression)throw new i.default(`${n}:invalid-parameters`,"'sqlExpression' parameter is not supported for binning");if("3d"===e.view.type)throw new i.default(`${n}:invalid-parameters`,"3d view is not supported for binning")}}}]);
//# sourceMappingURL=15231.96606043.chunk.js.map